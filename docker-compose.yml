services:
  web:
    build: .
    command: gunicorn blog_website.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - media_volume:/app/media
      - static_volume:/app/static
    depends_on:
      - db
      - tailwind  # Asegura que Tailwind se inicie antes de Django
    environment:
      - DEBUG=1
      - DATABASE_NAME=blog_website_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=persia098
      - DATABASE_HOST=db
      - NPM_BIN_PATH=/usr/bin/npm  # Establece la ubicación de npm

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: blog_website_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: persia098
    command: postgres -c listen_addresses='*'  # Aceptar conexiones de cualquier IP 
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  tailwind:
    build: .
    command: python manage.py tailwind start  # Inicia Tailwind CSS en el contenedor
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "3000:3000"  # Por lo general, tailwind se ejecuta en el puerto 3000
    depends_on:
      - db  # Espera que la base de datos esté lista antes de arrancar

volumes:
  postgres_data:
  static_volume:
  media_volume:
